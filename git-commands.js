var jsonGit = [
//['', '# '],
['git filter-branch -f --env-filter "GIT_AUTHOR_NAME=\'Bost\'; GIT_AUTHOR_EMAIL=\'thebost@gmail.com\'; GIT_COMMITTER_NAME=\'Bost\'; GIT_COMMITTER_EMAIL=\'thebost@gmail.com\';" HEAD', '# git: change the name and email in all commits'],
['git remote add upstream https://github.com/octocat/Spoon-Knife.git', '# git: assigns the original repo to a remote repo called \'upstream\''],
['git remote show upstream',                      '# git: show upstream branches and other info'],
['git fetch upstream branch1 branch2',            '# git: '],
['git branch -rd public/whatever',                '# git: delete a remote-tracking branch from local repository; -r --remotes, -d --delete'],
['git push origin --delete branchName',           '# git: delete a remote branch'],
['git diff localBranch remoteBranch filepath',    '# git: diff file against remote branch'],
['git diff master branch filepath',               '# git: diff file between two branches'],
['git diff --name-only master branch',            '# git: show files changed between two branches/commits'],
['git diff --word-diff / --cached',               '# git: show particular changed word / staged changes'],
['git show --name-only',                          '# git: show files changed in last commit'],
['git show :/query',                              '# git: search through the gitlog'],
['git show ff0011:file.txt',                      '# git: show content of file.txt in commit ff0011'],
['git show :0:file / :1:file / :2:file / :3:file','# git: show content of file in stage area (index) / common ancestor / target on the current branch where I am / the one I am bringing in'],
['git checkout BRANCH -- /path/file.txt',         '# git: copy file from a BRANCH to /path/file.txt'],
['git status -sb',                                '# git: --show --branch: show current branch and changes made since last commit'],
['git add -p',                                    '# git: --patch: interactively choose hunks of patch; see \'--interactive\''],
['git commit --amend --no-edit',                  '# git: amend commit; reuse commit message'],
['git reflog',                                    '# git: a kind of \'git history\''],
['git ls-files [path] | grep \'\.txt$\' | xargs git add', '# git: add all *.txt files under given path; must not be a bare repo'],
['git init gitDir',                               '# git: create bare repo in the gitDir'],
['git --git-dir=gitDir add "src/**/*.txt"',       '# git: recursivelly add all *.txt files from src/ to a repo located in gitDir'],
['git --git-dir=gitDir commit --author="Name <noreply@example.com>" -m "commitMsg"', '# git: commit to a repo located in gitDir under given Name'],
['git clone --bare gitDir bareRepoDir',           '# git: clone a repo from gitDir to a bareRepoDir (presumably located on a server)'],
['git add --work-tree=workLocation --git-dir=repoLocation', '# git: workLocation must not be a bare repo'],
['git shortlog -s -n',                            '# git: list contibutors; -s, --summary, -n, --numbered'],
['git config --global user.name "Bost"',          '# git: '],
['git config --global user.email thebost@gmail.com','# git: '],
['git config --global help.autocorrect 1',        '# git: help with typos like \'git comit\''],
['git config --global rerere.enabled 1',          '# git: rebase: remember actions on a particular commit - in case of repeating conflicts when rebasing; long running branches'],
['.git/config: url = https://Bost@github.com/Bost/dotfiles.git', '# git: github: do not ask for username'],
['git log -S\'text-to-search\'',                  '# git: search entire commit history'],
['git log --pretty=format:\'%h %s\'',             '# git: show formated commit logs'],
['git log --oneline --graph',                     '# git: a kind of \'gitk --all\''],
['git log --oneline --grep="pattern"',            '# git: '],
['git log --follow --name-only --format=\'%H\' -- path/to/file',     '# git: list all commits for a specific file'],
['git --git-dir=path/to/.git --work-tree=path/to/ ...',              '# git: set git base directory and working tree'],
['git rm --cached path/to/file && echo "path/to/file" > .gitignore', '# git: ignore previously tracked path/to/file'],

['git config branch.master.remote origin',           '# git: Use it in case of "You asked me to pull without telling me which branch ..."'],
['git config branch.master.merge refs/heads/master', '# git: '],
['git config core.fileMode false',                   '# git: cygwin: ignore chmod changes'],
['git ls-tree branchName path/to/file',              '# git: list the contents of a tree object; like ls -a'],
['git ls-files --cached / --deleted / --modified / --ignored / --stage', '# git: show info about files in the index and the working tree'],
]
