* Rest
  #+BEGIN_SRC shell
    exit 1 # just in case ...

    # eclipse: cvs:
    .metadata/.plugins/org.eclipse.team.cvs.ui/repositoriesView.xml

    # eclipse:
    METADA_CORE=.metadata/.plugins/org.eclipse.jdt.core;

    # eclipse: clean history
    rm -rf .metadata/.plugins/org.eclipse.core.resources/.history;

    # eclipse: clean metadata
    rm $METADA_CORE/*.index $METADA_CORE/savedIndexNames.txt;

    # eclipse: use this in find-replace dialogue to remove trailing whitespaces
    [\\t ]+$

    # eclipse: Type syso/sysout and ctrl + space for System.out.println()
    syso/sysout

    # eclipse: Jump to next error
    Ctrl-.

    # oracle: execute script.sql
    @C:\path\to\script.sql

    # solaris: sha1 checksum
    /usr/bin/digest -a sha1

    # solaris: wget
    /usr/sfw/bin/wget

    # solaris: ps: full command line (needs: sudo rootsh -i -u ... )
    /usr/ucb/ps -auxww

    # solaris: displays information about processors
    psrinfo

    # solaris: net: ipconfig
    /usr/sbin/ifconfig -a

    # postgres connect to localhost
    psql <dbname> <username>
    # postgres connect to remote host
    psql -h localhost -p 5432 -U postgres -W   # for no password - press Enter
    # test content
    SELECT count(*) FROM pg_catalog.pg_tables;
    # show password requirements
    # 'usename' without 'r' is correct!
    SELECT usename, passwd IS null FROM pg_shadow;
    # remove password
    ALTER ROLE <username> PASSWORD null;
    # set password to: foo
    ALTER ROLE <username> PASSWORD 'foo';

    # postgres CLI commands
    # \?         psql commands
    # \h         SQL commands
    # \d         list tables, views, sequences (also relations ?)
    # \conninfo  current database connection
    # \dt        list tables and owners
    # \z         list all tables, views, and sequences
    # \q         exit

    # youtube
    > / < # :speed 25% faster / slower
    c / m # toggle captions / mute
    , / . # move 1 frame forward / backward

    # latex to odt (OpenDocument Text / LibreOffice) conversion
    pandoc -s document.tex -o document.odt

    # guile
    # mit-scheme
    # racket general-purpose, multi-paradigm programming language based on the Scheme dialect of Lisp.

    # LaTeX is a document preparation system, a package containing a set of macros,
    # written by Leslie Lamport, built on top of TeX.

    # TeX is not just a typesetter, it is a typesetter with an embedded scripting
    # language, whose commands configure and control the behaviour of the
    # typesetter. LaTeX and Plain TeX are two different customised typesetting
    # environments, with their own commands and conventions, based on TeX (TeX is a
    # "formatting system")

    # AUCTeX - an extensible package for writing and formatting TeX files in Emacs

    # install own latex package system-wide
    sudo cp <package>.sty /usr/share/texmf-texlive/tex/latex/base/
    sudo mktexlsr

    # 1. install latex: disk space requirements:
    sudo apt install texlive-base              # 136 MB
    sudo apt install texlive-latex-recommended # 177 MB
    sudo apt install texlive                   # 240 MB
    sudo apt install texlive-latex-extra       # 404 MB
    sudo apt install texlive-full              # 4714 MB

    # 2. create example document
    echo "\
            \documentclass{article}
            \usepackage{hyperref}
            \begin{document}
            Hello world \LaTeX
            \url{https://linuxconfig.org}
            \end{document}
            " > hello-world.tex

    # 3. compile to pdf and view
    pdflatex hello-world.tex; and evince hello-world.pdf

    # install own latex package (sty-file) locally
    mkdir -p ~/texmf/tex/latex/<package>
    texhash ~/texmf

    # latex macros https://youtu.be/j--6zhiWDJ8

    # TODO M-q fill-paragraph
  #+END_SRC
